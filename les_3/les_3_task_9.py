# Vasilii Sitdikov
# GeekBrains Courses. Algorithms
# Lesson 3 task 9
# October 2019

# task: 9)  Найти максимальный элемент среди минимальных элементов столбцов матрицы.

# Solution:
import random

# Создание матрицы
n_rows = int(input("Задайте количество строк матрицы: "))
n_columns = int(input("Задайте количество столбцов матрицы: "))
matrix = [[random.randint(-100, 100) for _ in range(n_columns)] for _ in range(n_rows)]

# Вывод матрицы на экран
print("Сформирована матрица:")
print('*' * len(matrix[0]) * 5)
for row in matrix:
    for item in row:
        print(f'{item:>5}', end='')
    print()
print('*' * len(matrix[0]) * 5)

# Поиск минимума в столбцах (за один проход)
min_in_col = matrix[0]  # Список для хранения минимальных значений в столбцах. Инициируем первой строкой
for row in matrix[1:]:  # Внешний цикл по строкам матрицы. Первую строку саму с собой не сравниваем
    for i in range(len(matrix[0])):  # Внутренний цикл по элементам строки матрицы. Нам нуже индекс.
        if row[i] < min_in_col[i]:  # Если новый элемент для соответствующего столбца меньше, чем сохраненный ...
            min_in_col[i] = row[i]  # ... то обновляем значение минимума

# Поиск максимума среди найденных значений без использования функции max
# Не будем создавать новую переменную для максимума, значение будем хранить в первом элементе списка min_in_col[0]
for item in min_in_col:
    if item > min_in_col[0]:
        min_in_col[0] = item

# Вывод ответа
print(f'Максимальный элемент среди минимальных элементов столбцов матрицы равен {min_in_col[0]}')
